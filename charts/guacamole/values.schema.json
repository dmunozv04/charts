{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "additionalProperties": false,
  "properties": {
    "client": {
      "additionalProperties": false,
      "description": "Guacamole Client configuration\nThe Guacamole web application running within Tomcat with support for WebSocket.\nConfiguration is generated automatically when the image starts based on environment variables.",
      "properties": {
        "affinity": {
          "additionalProperties": false,
          "description": "Affinity rules for client pod assignment\nMore information: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/",
          "required": [],
          "title": "affinity",
          "type": "object"
        },
        "api": {
          "additionalProperties": false,
          "description": "Session and API configuration\nControls session timeouts, request limits, and other API behavior",
          "properties": {
            "maxRequestSize": {
              "default": "",
              "description": "API_MAX_REQUEST_SIZE: Maximum HTTP request body size in bytes, 0 = unlimited (default: 2097152 / 2MB)\nNote: Reverse proxies may enforce their own limits (e.g., Nginx defaults to 1MB)",
              "required": [],
              "title": "maxRequestSize",
              "type": "string"
            },
            "sessionTimeout": {
              "default": "",
              "description": "API_SESSION_TIMEOUT: Session timeout in minutes for inactive authentication tokens (default: 60)",
              "required": [],
              "title": "sessionTimeout",
              "type": "string"
            }
          },
          "required": [
            "sessionTimeout",
            "maxRequestSize"
          ],
          "title": "api",
          "type": "object"
        },
        "auth": {
          "additionalProperties": false,
          "description": "Authentication configuration\nGuacamole supports multiple authentication backends that can be combined",
          "properties": {
            "cas": {
              "additionalProperties": false,
              "description": "CAS Single Sign-On authentication\nRequires CAS server for authentication, must be layered with other auth extensions for connections",
              "properties": {
                "authorizationEndpoint": {
                  "default": "",
                  "description": "CAS_AUTHORIZATION_ENDPOINT: Full URL to CAS authentication server base (required)",
                  "required": [],
                  "title": "authorizationEndpoint",
                  "type": "string"
                },
                "clearpassKey": {
                  "default": "",
                  "description": "Optional CAS configuration\nCAS_CLEARPASS_KEY: Private key file for CAS ClearPass password decryption",
                  "required": [],
                  "title": "clearpassKey",
                  "type": "string"
                },
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "groupAttribute": {
                  "default": "",
                  "description": "CAS_GROUP_ATTRIBUTE: CAS attribute for group membership (e.g., \"memberOf\")",
                  "required": [],
                  "title": "groupAttribute",
                  "type": "string"
                },
                "groupFormat": {
                  "default": "",
                  "description": "CAS_GROUP_FORMAT: Format for group names - \"plain\" or \"ldap\" (default: \"plain\")",
                  "required": [],
                  "title": "groupFormat",
                  "type": "string"
                },
                "groupLdapAttribute": {
                  "default": "",
                  "description": "CAS_GROUP_LDAP_ATTRIBUTE: LDAP attribute for group names (requires groupFormat: \"ldap\")",
                  "required": [],
                  "title": "groupLdapAttribute",
                  "type": "string"
                },
                "groupLdapBaseDn": {
                  "default": "",
                  "description": "CAS_GROUP_LDAP_BASE_DN: Base DN for LDAP-formatted groups (requires groupFormat: \"ldap\")",
                  "required": [],
                  "title": "groupLdapBaseDn",
                  "type": "string"
                },
                "redirectUri": {
                  "default": "",
                  "description": "CAS_REDIRECT_URI: Full URL to redirect back to Guacamole after authentication (required)",
                  "required": [],
                  "title": "redirectUri",
                  "type": "string"
                }
              },
              "required": [
                "enabled",
                "authorizationEndpoint",
                "redirectUri",
                "clearpassKey",
                "groupAttribute",
                "groupFormat",
                "groupLdapBaseDn",
                "groupLdapAttribute"
              ],
              "title": "cas",
              "type": "object"
            },
            "duo": {
              "additionalProperties": false,
              "description": "Duo multi-factor authentication\nRequires Duo account and Web SDK application setup",
              "properties": {
                "apiHostname": {
                  "default": "",
                  "description": "DUO_API_HOSTNAME: Duo API hostname (e.g., api-XXXXXXXX.duosecurity.com) (required)",
                  "required": [],
                  "title": "apiHostname",
                  "type": "string"
                },
                "authTimeout": {
                  "default": "",
                  "description": "Optional Duo configuration\nDUO_AUTH_TIMEOUT: Maximum authentication time in minutes (default: 5)",
                  "required": [],
                  "title": "authTimeout",
                  "type": "string"
                },
                "bypassHosts": {
                  "default": "",
                  "description": "DUO_BYPASS_HOSTS: Comma-separated list of IPs/subnets to bypass Duo (CIDR notation)",
                  "required": [],
                  "title": "bypassHosts",
                  "type": "string"
                },
                "clientId": {
                  "default": "",
                  "description": "DUO_CLIENT_ID: Duo client ID from Web SDK application (required)",
                  "required": [],
                  "title": "clientId",
                  "type": "string"
                },
                "clientSecret": {
                  "default": "",
                  "description": "DUO_CLIENT_SECRET: Duo client secret from Web SDK application (required)",
                  "required": [],
                  "title": "clientSecret",
                  "type": "string"
                },
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "enforceHosts": {
                  "default": "",
                  "description": "DUO_ENFORCE_HOSTS: Comma-separated list of IPs/subnets to enforce Duo (CIDR notation)",
                  "required": [],
                  "title": "enforceHosts",
                  "type": "string"
                },
                "redirectUri": {
                  "default": "",
                  "description": "DUO_REDIRECT_URI: Full URL for Duo to redirect back to Guacamole (required)",
                  "required": [],
                  "title": "redirectUri",
                  "type": "string"
                }
              },
              "required": [
                "enabled",
                "apiHostname",
                "clientId",
                "clientSecret",
                "redirectUri",
                "authTimeout",
                "bypassHosts",
                "enforceHosts"
              ],
              "title": "duo",
              "type": "object"
            },
            "header": {
              "additionalProperties": false,
              "description": "Header authentication\nAuthenticates users through a trusted third-party server via HTTP headers",
              "properties": {
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "httpAuthHeader": {
                  "default": "",
                  "description": "HTTP_AUTH_HEADER: Name of HTTP header containing username (default: \"REMOTE_USER\")",
                  "required": [],
                  "title": "httpAuthHeader",
                  "type": "string"
                }
              },
              "required": [
                "enabled",
                "httpAuthHeader"
              ],
              "title": "header",
              "type": "object"
            },
            "json": {
              "additionalProperties": false,
              "description": "Encrypted JSON authentication\nDelegates authentication to external service via signed/encrypted JSON",
              "properties": {
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "secretKey": {
                  "default": "",
                  "description": "JSON_SECRET_KEY: 128-bit AES key as 32-digit hexadecimal value (required)\nGenerate with: echo -n \"YourPassphrase\" | md5sum",
                  "required": [],
                  "title": "secretKey",
                  "type": "string"
                }
              },
              "required": [
                "enabled",
                "secretKey"
              ],
              "title": "json",
              "type": "object"
            },
            "ldap": {
              "additionalProperties": false,
              "description": "LDAP authentication backend\nRequires network access to an LDAP directory",
              "properties": {
                "configBaseDn": {
                  "default": "",
                  "description": "LDAP_CONFIG_BASE_DN: Base DN for Guacamole configurations",
                  "required": [],
                  "title": "configBaseDn",
                  "type": "string"
                },
                "dereferenceAliases": {
                  "default": "",
                  "description": "LDAP_DEREFERENCE_ALIASES: Alias dereferencing - \"never\", \"searching\", \"finding\", \"always\" (default: \"never\")",
                  "required": [],
                  "title": "dereferenceAliases",
                  "type": "string"
                },
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "encryptionMethod": {
                  "default": "",
                  "description": "LDAP_ENCRYPTION_METHOD: Encryption method - \"none\", \"ssl\", or \"starttls\"",
                  "required": [],
                  "title": "encryptionMethod",
                  "type": "string"
                },
                "followReferrals": {
                  "default": "",
                  "description": "LDAP_FOLLOW_REFERRALS: Follow LDAP referrals - \"true\" or \"false\" (default: \"false\")",
                  "required": [],
                  "title": "followReferrals",
                  "type": "string"
                },
                "groupBaseDn": {
                  "default": "",
                  "description": "Optional LDAP configuration\nLDAP_GROUP_BASE_DN: Base DN for groups (required for seeAlso attribute support)",
                  "required": [],
                  "title": "groupBaseDn",
                  "type": "string"
                },
                "groupNameAttribute": {
                  "default": "",
                  "description": "LDAP_GROUP_NAME_ATTRIBUTE: Attribute defining group names (default: \"cn\")",
                  "required": [],
                  "title": "groupNameAttribute",
                  "type": "string"
                },
                "groupSearchFilter": {
                  "default": "",
                  "description": "LDAP_GROUP_SEARCH_FILTER: Search filter for groups (default: \"(objectClass=*)\")",
                  "required": [],
                  "title": "groupSearchFilter",
                  "type": "string"
                },
                "hostname": {
                  "default": "",
                  "description": "LDAP_HOSTNAME: Hostname or IP address of LDAP server (required)",
                  "required": [],
                  "title": "hostname",
                  "type": "string"
                },
                "maxReferralHops": {
                  "default": "",
                  "description": "LDAP_MAX_REFERRAL_HOPS: Maximum referral hops when following referrals (default: 5)",
                  "required": [],
                  "title": "maxReferralHops",
                  "type": "string"
                },
                "maxSearchResults": {
                  "default": "",
                  "description": "LDAP_MAX_SEARCH_RESULTS: Maximum search results per LDAP query (default: 1000)",
                  "required": [],
                  "title": "maxSearchResults",
                  "type": "string"
                },
                "memberAttribute": {
                  "default": "",
                  "description": "LDAP_MEMBER_ATTRIBUTE: Attribute containing group members (default: \"member\")",
                  "required": [],
                  "title": "memberAttribute",
                  "type": "string"
                },
                "memberAttributeType": {
                  "default": "",
                  "description": "LDAP_MEMBER_ATTRIBUTE_TYPE: Member identification type - \"dn\" or \"uid\" (default: \"dn\")",
                  "required": [],
                  "title": "memberAttributeType",
                  "type": "string"
                },
                "operationTimeout": {
                  "default": "",
                  "description": "LDAP_OPERATION_TIMEOUT: Timeout for LDAP operations in seconds (default: 30)",
                  "required": [],
                  "title": "operationTimeout",
                  "type": "string"
                },
                "port": {
                  "default": "",
                  "description": "LDAP_PORT: Port for LDAP connection (default: 389 for LDAP/STARTTLS, 636 for LDAPS)",
                  "required": [],
                  "title": "port",
                  "type": "string"
                },
                "searchBindDn": {
                  "default": "",
                  "description": "LDAP_SEARCH_BIND_DN: DN to bind as when searching for users",
                  "required": [],
                  "title": "searchBindDn",
                  "type": "string"
                },
                "searchBindPassword": {
                  "default": "",
                  "description": "LDAP_SEARCH_BIND_PASSWORD: Password for search bind DN",
                  "required": [],
                  "title": "searchBindPassword",
                  "type": "string"
                },
                "userAttributes": {
                  "default": "",
                  "description": "LDAP_USER_ATTRIBUTES: Attributes to retrieve for parameter tokens (comma-separated)",
                  "required": [],
                  "title": "userAttributes",
                  "type": "string"
                },
                "userBaseDn": {
                  "default": "",
                  "description": "LDAP_USER_BASE_DN: Base DN for all Guacamole users (required)",
                  "required": [],
                  "title": "userBaseDn",
                  "type": "string"
                },
                "usernameAttribute": {
                  "default": "",
                  "description": "LDAP_USERNAME_ATTRIBUTE: Attribute containing usernames (default: \"uid\")",
                  "required": [],
                  "title": "usernameAttribute",
                  "type": "string"
                }
              },
              "required": [
                "enabled",
                "hostname",
                "port",
                "encryptionMethod",
                "userBaseDn",
                "groupBaseDn",
                "groupSearchFilter",
                "groupNameAttribute",
                "memberAttribute",
                "memberAttributeType",
                "searchBindDn",
                "searchBindPassword",
                "usernameAttribute",
                "userAttributes",
                "configBaseDn",
                "dereferenceAliases",
                "followReferrals",
                "maxReferralHops",
                "maxSearchResults",
                "operationTimeout"
              ],
              "title": "ldap",
              "type": "object"
            },
            "mysql": {
              "additionalProperties": false,
              "description": "MySQL authentication backend\nRequires database initialization with Guacamole schema before use",
              "properties": {
                "absoluteMaxConnections": {
                  "default": "",
                  "description": "Optional configuration for connection limits and behavior\nMYSQL_ABSOLUTE_MAX_CONNECTIONS: Absolute maximum concurrent connections across all users (0 = unlimited)",
                  "required": [],
                  "title": "absoluteMaxConnections",
                  "type": "string"
                },
                "autoCreateAccounts": {
                  "default": "",
                  "description": "MYSQL_AUTO_CREATE_ACCOUNTS: Auto-create accounts for users authenticated by other modules (true/false)",
                  "required": [],
                  "title": "autoCreateAccounts",
                  "type": "string"
                },
                "database": {
                  "default": "",
                  "description": "MYSQL_DATABASE: Name of the database to use for Guacamole authentication (required)",
                  "required": [],
                  "title": "database",
                  "type": "string"
                },
                "defaultMaxConnections": {
                  "default": "",
                  "description": "MYSQL_DEFAULT_MAX_CONNECTIONS: Default max connections per Guacamole connection (0 = unlimited)",
                  "required": [],
                  "title": "defaultMaxConnections",
                  "type": "string"
                },
                "defaultMaxConnectionsPerUser": {
                  "default": "",
                  "description": "MYSQL_DEFAULT_MAX_CONNECTIONS_PER_USER: Default max connections per user per connection (0 = unlimited)",
                  "required": [],
                  "title": "defaultMaxConnectionsPerUser",
                  "type": "string"
                },
                "defaultMaxGroupConnections": {
                  "default": "",
                  "description": "MYSQL_DEFAULT_MAX_GROUP_CONNECTIONS: Default max connections per connection group (0 = unlimited)",
                  "required": [],
                  "title": "defaultMaxGroupConnections",
                  "type": "string"
                },
                "defaultMaxGroupConnectionsPerUser": {
                  "default": "",
                  "description": "MYSQL_DEFAULT_MAX_GROUP_CONNECTIONS_PER_USER: Default max connections per user per group (default: 1)",
                  "required": [],
                  "title": "defaultMaxGroupConnectionsPerUser",
                  "type": "string"
                },
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "hostname": {
                  "default": "",
                  "description": "MYSQL_HOSTNAME: Hostname of MySQL server (required if not using Docker links)",
                  "required": [],
                  "title": "hostname",
                  "type": "string"
                },
                "password": {
                  "default": "",
                  "description": "MYSQL_PASSWORD: Password for MySQL user (required)",
                  "required": [],
                  "title": "password",
                  "type": "string"
                },
                "port": {
                  "default": "",
                  "description": "MYSQL_PORT: Port for MySQL connection (optional, default: 3306)",
                  "required": [],
                  "title": "port",
                  "type": "string"
                },
                "username": {
                  "default": "",
                  "description": "MYSQL_USERNAME: User that Guacamole will use to connect to MySQL (required)",
                  "required": [],
                  "title": "username",
                  "type": "string"
                }
              },
              "required": [
                "enabled",
                "hostname",
                "port",
                "database",
                "username",
                "password",
                "absoluteMaxConnections",
                "defaultMaxConnections",
                "defaultMaxGroupConnections",
                "defaultMaxConnectionsPerUser",
                "defaultMaxGroupConnectionsPerUser",
                "autoCreateAccounts"
              ],
              "title": "mysql",
              "type": "object"
            },
            "openid": {
              "additionalProperties": false,
              "description": "OpenID Connect authentication\nSingle Sign-On using OpenID Connect standard (OAuth 2.0 identity layer)",
              "properties": {
                "allowedClockSkew": {
                  "default": "",
                  "description": "OPENID_ALLOWED_CLOCK_SKEW: Clock skew tolerance in seconds (default: 30)",
                  "required": [],
                  "title": "allowedClockSkew",
                  "type": "string"
                },
                "authorizationEndpoint": {
                  "default": "",
                  "description": "OPENID_AUTHORIZATION_ENDPOINT: Authorization endpoint URI of OpenID service (required)",
                  "required": [],
                  "title": "authorizationEndpoint",
                  "type": "string"
                },
                "clientId": {
                  "default": "",
                  "description": "OPENID_CLIENT_ID: OpenID client ID for this application (required)",
                  "required": [],
                  "title": "clientId",
                  "type": "string"
                },
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "groupsClaimType": {
                  "default": "",
                  "description": "OPENID_GROUPS_CLAIM_TYPE: JWT claim containing group memberships (default: \"groups\")",
                  "required": [],
                  "title": "groupsClaimType",
                  "type": "string"
                },
                "issuer": {
                  "default": "",
                  "description": "OPENID_ISSUER: Expected issuer for all received ID tokens (required)",
                  "required": [],
                  "title": "issuer",
                  "type": "string"
                },
                "jwksEndpoint": {
                  "default": "",
                  "description": "OPENID_JWKS_ENDPOINT: JWKS endpoint URI for JWT validation (required)",
                  "required": [],
                  "title": "jwksEndpoint",
                  "type": "string"
                },
                "maxNonceValidity": {
                  "default": "",
                  "description": "OPENID_MAX_NONCE_VALIDITY: Maximum nonce validity in minutes (default: 10)",
                  "required": [],
                  "title": "maxNonceValidity",
                  "type": "string"
                },
                "maxTokenValidity": {
                  "default": "",
                  "description": "OPENID_MAX_TOKEN_VALIDITY: Maximum token validity in minutes (default: 300)",
                  "required": [],
                  "title": "maxTokenValidity",
                  "type": "string"
                },
                "redirectUri": {
                  "default": "",
                  "description": "OPENID_REDIRECT_URI: Full URL for IdP to redirect users back to Guacamole (required)",
                  "required": [],
                  "title": "redirectUri",
                  "type": "string"
                },
                "scope": {
                  "default": "",
                  "description": "OPENID_SCOPE: Space-separated OpenID scopes to request (default: \"openid email profile\")",
                  "required": [],
                  "title": "scope",
                  "type": "string"
                },
                "usernameClaimType": {
                  "default": "",
                  "description": "Optional OpenID Connect configuration\nOPENID_USERNAME_CLAIM_TYPE: JWT claim containing username (default: \"email\")",
                  "required": [],
                  "title": "usernameClaimType",
                  "type": "string"
                }
              },
              "required": [
                "enabled",
                "authorizationEndpoint",
                "jwksEndpoint",
                "issuer",
                "clientId",
                "redirectUri",
                "usernameClaimType",
                "groupsClaimType",
                "scope",
                "allowedClockSkew",
                "maxTokenValidity",
                "maxNonceValidity"
              ],
              "title": "openid",
              "type": "object"
            },
            "postgresql": {
              "additionalProperties": false,
              "description": "PostgreSQL authentication backend\nRequires database initialization with Guacamole schema before use",
              "properties": {
                "absoluteMaxConnections": {
                  "default": "",
                  "description": "Optional configuration for connection limits and behavior\nPOSTGRESQL_ABSOLUTE_MAX_CONNECTIONS: Absolute maximum concurrent connections across all users (0 = unlimited)",
                  "required": [],
                  "title": "absoluteMaxConnections",
                  "type": "string"
                },
                "autoCreateAccounts": {
                  "default": "",
                  "description": "POSTGRESQL_AUTO_CREATE_ACCOUNTS: Auto-create accounts for users authenticated by other modules (true/false)",
                  "required": [],
                  "title": "autoCreateAccounts",
                  "type": "string"
                },
                "database": {
                  "default": "",
                  "description": "POSTGRESQL_DATABASE: Name of the database to use for Guacamole authentication (required)",
                  "required": [],
                  "title": "database",
                  "type": "string"
                },
                "defaultMaxConnections": {
                  "default": "",
                  "description": "POSTGRESQL_DEFAULT_MAX_CONNECTIONS: Default max connections per Guacamole connection (0 = unlimited)",
                  "required": [],
                  "title": "defaultMaxConnections",
                  "type": "string"
                },
                "defaultMaxConnectionsPerUser": {
                  "default": "",
                  "description": "POSTGRESQL_DEFAULT_MAX_CONNECTIONS_PER_USER: Default max connections per user per connection (0 = unlimited)",
                  "required": [],
                  "title": "defaultMaxConnectionsPerUser",
                  "type": "string"
                },
                "defaultMaxGroupConnections": {
                  "default": "",
                  "description": "POSTGRESQL_DEFAULT_MAX_GROUP_CONNECTIONS: Default max connections per connection group (0 = unlimited)",
                  "required": [],
                  "title": "defaultMaxGroupConnections",
                  "type": "string"
                },
                "defaultMaxGroupConnectionsPerUser": {
                  "default": "",
                  "description": "POSTGRESQL_DEFAULT_MAX_GROUP_CONNECTIONS_PER_USER: Default max connections per user per group (default: 1)",
                  "required": [],
                  "title": "defaultMaxGroupConnectionsPerUser",
                  "type": "string"
                },
                "defaultStatementTimeout": {
                  "default": "",
                  "description": "POSTGRESQL_DEFAULT_STATEMENT_TIMEOUT: Timeout for database queries in seconds (0 = disabled)",
                  "required": [],
                  "title": "defaultStatementTimeout",
                  "type": "string"
                },
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "hostname": {
                  "default": "",
                  "description": "POSTGRESQL_HOSTNAME: Hostname of PostgreSQL server (required if not using Docker links)",
                  "required": [],
                  "title": "hostname",
                  "type": "string"
                },
                "password": {
                  "default": "",
                  "description": "POSTGRESQL_PASSWORD: Password for PostgreSQL user (required)",
                  "required": [],
                  "title": "password",
                  "type": "string"
                },
                "port": {
                  "default": "",
                  "description": "POSTGRESQL_PORT: Port for PostgreSQL connection (optional, default: 5432)",
                  "required": [],
                  "title": "port",
                  "type": "string"
                },
                "socketTimeout": {
                  "default": "",
                  "description": "POSTGRESQL_SOCKET_TIMEOUT: Timeout for socket read operations in seconds (0 = disabled)",
                  "required": [],
                  "title": "socketTimeout",
                  "type": "string"
                },
                "username": {
                  "default": "",
                  "description": "POSTGRESQL_USERNAME: User that Guacamole will use to connect to PostgreSQL (required)",
                  "required": [],
                  "title": "username",
                  "type": "string"
                }
              },
              "required": [
                "enabled",
                "hostname",
                "port",
                "database",
                "username",
                "password",
                "absoluteMaxConnections",
                "defaultMaxConnections",
                "defaultMaxGroupConnections",
                "defaultMaxConnectionsPerUser",
                "defaultMaxGroupConnectionsPerUser",
                "autoCreateAccounts",
                "defaultStatementTimeout",
                "socketTimeout"
              ],
              "title": "postgresql",
              "type": "object"
            },
            "quickconnect": {
              "additionalProperties": false,
              "description": "QuickConnect authentication\nAllows users to create ad-hoc connections via URI input\nSecurity warning: Users can set any connection parameters, including file sharing paths",
              "properties": {
                "allowedParameters": {
                  "default": "",
                  "description": "QUICKCONNECT_ALLOWED_PARAMETERS: Comma-separated list of allowed connection parameters",
                  "required": [],
                  "title": "allowedParameters",
                  "type": "string"
                },
                "deniedParameters": {
                  "default": "",
                  "description": "QUICKCONNECT_DENIED_PARAMETERS: Comma-separated list of denied connection parameters",
                  "required": [],
                  "title": "deniedParameters",
                  "type": "string"
                },
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                }
              },
              "required": [
                "enabled",
                "allowedParameters",
                "deniedParameters"
              ],
              "title": "quickconnect",
              "type": "object"
            },
            "radius": {
              "additionalProperties": false,
              "description": "RADIUS authentication\nDelegates authentication to RADIUS service, must be layered with other auth extensions\nNote: Requires building custom Docker image with LGPL extensions due to licensing",
              "properties": {
                "authPort": {
                  "default": "",
                  "description": "RADIUS_AUTH_PORT: RADIUS authentication port (default: 1812)",
                  "required": [],
                  "title": "authPort",
                  "type": "string"
                },
                "authProtocol": {
                  "default": "",
                  "description": "RADIUS_AUTH_PROTOCOL: Authentication protocol - \"pap\", \"chap\", \"mschapv1\", \"mschapv2\", \n                       \"eap-md5\", \"eap-tls\", \"eap-ttls\" (required)",
                  "required": [],
                  "title": "authProtocol",
                  "type": "string"
                },
                "caFile": {
                  "default": "",
                  "description": "RADIUS_CA_FILE: Path to certificate authority file (default: GUACAMOLE_HOME/ca.crt)",
                  "required": [],
                  "title": "caFile",
                  "type": "string"
                },
                "caPassword": {
                  "default": "",
                  "description": "RADIUS_CA_PASSWORD: Password for CA keystore",
                  "required": [],
                  "title": "caPassword",
                  "type": "string"
                },
                "caType": {
                  "default": "",
                  "description": "RADIUS_CA_TYPE: CA keystore type - \"pem\", \"jceks\", \"jks\", \"pkcs12\" (default: \"pem\")",
                  "required": [],
                  "title": "caType",
                  "type": "string"
                },
                "eapTtlsInnerProtocol": {
                  "default": "",
                  "description": "RADIUS_EAP_TTLS_INNER_PROTOCOL: Inner protocol for EAP-TTLS (required when authProtocol is eap-ttls)",
                  "required": [],
                  "title": "eapTtlsInnerProtocol",
                  "type": "string"
                },
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "hostname": {
                  "default": "",
                  "description": "RADIUS_HOSTNAME: RADIUS server hostname (default: \"localhost\")",
                  "required": [],
                  "title": "hostname",
                  "type": "string"
                },
                "keyFile": {
                  "default": "",
                  "description": "Optional RADIUS configuration\nRADIUS_KEY_FILE: Path to client certificate/key file for TLS protocols (default: GUACAMOLE_HOME/radius.key)",
                  "required": [],
                  "title": "keyFile",
                  "type": "string"
                },
                "keyPassword": {
                  "default": "",
                  "description": "RADIUS_KEY_PASSWORD: Password for private key file",
                  "required": [],
                  "title": "keyPassword",
                  "type": "string"
                },
                "keyType": {
                  "default": "",
                  "description": "RADIUS_KEY_TYPE: Keystore type - \"pem\", \"jceks\", \"jks\", \"pkcs12\" (default: \"pkcs12\")",
                  "required": [],
                  "title": "keyType",
                  "type": "string"
                },
                "nasIp": {
                  "default": "",
                  "description": "RADIUS_NAS_IP: Manual NAS IP address (auto-detected if not specified)",
                  "required": [],
                  "title": "nasIp",
                  "type": "string"
                },
                "retries": {
                  "default": "",
                  "description": "RADIUS_RETRIES: Connection retry attempts (default: 5)",
                  "required": [],
                  "title": "retries",
                  "type": "string"
                },
                "sharedSecret": {
                  "default": "",
                  "description": "RADIUS_SHARED_SECRET: Shared secret for RADIUS server (required)",
                  "required": [],
                  "title": "sharedSecret",
                  "type": "string"
                },
                "timeout": {
                  "default": "",
                  "description": "RADIUS_TIMEOUT: Connection timeout in seconds (default: 60)",
                  "required": [],
                  "title": "timeout",
                  "type": "string"
                },
                "trustAll": {
                  "default": "",
                  "description": "RADIUS_TRUST_ALL: Trust all certificates without validation (true/false, default: false)",
                  "required": [],
                  "title": "trustAll",
                  "type": "string"
                }
              },
              "required": [
                "enabled",
                "hostname",
                "authPort",
                "sharedSecret",
                "authProtocol",
                "keyFile",
                "keyType",
                "keyPassword",
                "caFile",
                "caType",
                "caPassword",
                "trustAll",
                "retries",
                "timeout",
                "eapTtlsInnerProtocol",
                "nasIp"
              ],
              "title": "radius",
              "type": "object"
            },
            "saml": {
              "additionalProperties": false,
              "description": "SAML authentication\nSingle Sign-On authentication with SAML Identity Providers",
              "properties": {
                "callbackUrl": {
                  "default": "",
                  "description": "SAML_CALLBACK_URL: Callback URL for IdP to redirect users back to Guacamole (required if not in metadata)",
                  "required": [],
                  "title": "callbackUrl",
                  "type": "string"
                },
                "compressRequest": {
                  "default": "",
                  "description": "SAML_COMPRESS_REQUEST: Enable compression on requests to IdP (true/false, default: true)",
                  "required": [],
                  "title": "compressRequest",
                  "type": "string"
                },
                "compressResponse": {
                  "default": "",
                  "description": "SAML_COMPRESS_RESPONSE: Request compressed responses from IdP (true/false, default: true)",
                  "required": [],
                  "title": "compressResponse",
                  "type": "string"
                },
                "debug": {
                  "default": "",
                  "description": "SAML_DEBUG: Enable verbose logging for debugging (true/false, default: false)",
                  "required": [],
                  "title": "debug",
                  "type": "string"
                },
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "entityId": {
                  "default": "",
                  "description": "SAML_ENTITY_ID: SAML Entity Identifier for this Guacamole instance (required if not in metadata)",
                  "required": [],
                  "title": "entityId",
                  "type": "string"
                },
                "groupAttribute": {
                  "default": "",
                  "description": "SAML_GROUP_ATTRIBUTE: Attribute name containing group memberships (default: \"groups\")",
                  "required": [],
                  "title": "groupAttribute",
                  "type": "string"
                },
                "idpMetadataUrl": {
                  "default": "",
                  "description": "SAML_IDP_METADATA_URL: URI of SAML IdP metadata file (local file or remote URL)",
                  "required": [],
                  "title": "idpMetadataUrl",
                  "type": "string"
                },
                "idpUrl": {
                  "default": "",
                  "description": "SAML_IDP_URL: URL of Identity Provider for user redirection (required if not in metadata)",
                  "required": [],
                  "title": "idpUrl",
                  "type": "string"
                },
                "strict": {
                  "default": "",
                  "description": "Optional SAML configuration\nSAML_STRICT: Enable strict security checks on servers and certificates (true/false, default: true)",
                  "required": [],
                  "title": "strict",
                  "type": "string"
                }
              },
              "required": [
                "enabled",
                "idpMetadataUrl",
                "idpUrl",
                "entityId",
                "callbackUrl",
                "strict",
                "compressRequest",
                "compressResponse",
                "groupAttribute",
                "debug"
              ],
              "title": "saml",
              "type": "object"
            },
            "sqlserver": {
              "additionalProperties": false,
              "description": "SQL Server authentication backend\nRequires database initialization with Guacamole schema before use",
              "properties": {
                "absoluteMaxConnections": {
                  "default": "",
                  "description": "SQLSERVER_ABSOLUTE_MAX_CONNECTIONS: Absolute maximum concurrent connections",
                  "required": [],
                  "title": "absoluteMaxConnections",
                  "type": "string"
                },
                "autoCreateAccounts": {
                  "default": "",
                  "description": "SQLSERVER_AUTO_CREATE_ACCOUNTS: Auto-create accounts for users authenticated by other modules (true/false)",
                  "required": [],
                  "title": "autoCreateAccounts",
                  "type": "string"
                },
                "batchSize": {
                  "default": "",
                  "description": "SQLSERVER_BATCH_SIZE: Maximum objects per query (default: 500)",
                  "required": [],
                  "title": "batchSize",
                  "type": "string"
                },
                "database": {
                  "default": "",
                  "description": "SQLSERVER_DATABASE: Name of the database to use for Guacamole authentication (required)",
                  "required": [],
                  "title": "database",
                  "type": "string"
                },
                "defaultMaxConnections": {
                  "default": "",
                  "description": "Connection limits\nSQLSERVER_DEFAULT_MAX_CONNECTIONS: Max concurrent connections per connection",
                  "required": [],
                  "title": "defaultMaxConnections",
                  "type": "string"
                },
                "defaultMaxConnectionsPerUser": {
                  "default": "",
                  "description": "SQLSERVER_DEFAULT_MAX_CONNECTIONS_PER_USER: Max connections per user per connection",
                  "required": [],
                  "title": "defaultMaxConnectionsPerUser",
                  "type": "string"
                },
                "defaultMaxGroupConnections": {
                  "default": "",
                  "description": "SQLSERVER_DEFAULT_MAX_GROUP_CONNECTIONS: Max concurrent connections per group",
                  "required": [],
                  "title": "defaultMaxGroupConnections",
                  "type": "string"
                },
                "defaultMaxGroupConnectionsPerUser": {
                  "default": "",
                  "description": "SQLSERVER_DEFAULT_MAX_GROUP_CONNECTIONS_PER_USER: Max connections per user per group",
                  "required": [],
                  "title": "defaultMaxGroupConnectionsPerUser",
                  "type": "string"
                },
                "driver": {
                  "default": "",
                  "description": "Optional SQL Server configuration\nSQLSERVER_DRIVER: TDS-compatible JDBC driver - \"microsoft2005\" (default), \"microsoft\", \"jtds\", \"datadirect\"",
                  "required": [],
                  "title": "driver",
                  "type": "string"
                },
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "enforceAccessWindowsForActiveSessions": {
                  "default": "",
                  "description": "SQLSERVER_ENFORCE_ACCESS_WINDOWS_FOR_ACTIVE_SESSIONS: Enforce access windows for active sessions (true/false)",
                  "required": [],
                  "title": "enforceAccessWindowsForActiveSessions",
                  "type": "string"
                },
                "hostname": {
                  "default": "",
                  "description": "SQLSERVER_HOSTNAME: Hostname of SQL Server (required if not using Docker links)",
                  "required": [],
                  "title": "hostname",
                  "type": "string"
                },
                "instance": {
                  "default": "",
                  "description": "SQLSERVER_INSTANCE: SQL Server instance name (optional, for non-default instances)",
                  "required": [],
                  "title": "instance",
                  "type": "string"
                },
                "password": {
                  "default": "",
                  "description": "SQLSERVER_PASSWORD: Password for SQL Server user (required)",
                  "required": [],
                  "title": "password",
                  "type": "string"
                },
                "port": {
                  "default": "",
                  "description": "SQLSERVER_PORT: Port for SQL Server connection (optional, default: 1433)",
                  "required": [],
                  "title": "port",
                  "type": "string"
                },
                "trackExternalConnectionHistory": {
                  "default": "",
                  "description": "SQLSERVER_TRACK_EXTERNAL_CONNECTION_HISTORY: Track history for external connections (true/false)",
                  "required": [],
                  "title": "trackExternalConnectionHistory",
                  "type": "string"
                },
                "userPasswordHistorySize": {
                  "default": "",
                  "description": "SQLSERVER_USER_PASSWORD_HISTORY_SIZE: Number of previous passwords to remember",
                  "required": [],
                  "title": "userPasswordHistorySize",
                  "type": "string"
                },
                "userPasswordMaxAge": {
                  "default": "",
                  "description": "SQLSERVER_USER_PASSWORD_MAX_AGE: Maximum days before password change required",
                  "required": [],
                  "title": "userPasswordMaxAge",
                  "type": "string"
                },
                "userPasswordMinAge": {
                  "default": "",
                  "description": "SQLSERVER_USER_PASSWORD_MIN_AGE: Minimum days before password change allowed",
                  "required": [],
                  "title": "userPasswordMinAge",
                  "type": "string"
                },
                "userPasswordMinLength": {
                  "default": "",
                  "description": "Password policy enforcement\nSQLSERVER_USER_PASSWORD_MIN_LENGTH: Minimum password length in characters",
                  "required": [],
                  "title": "userPasswordMinLength",
                  "type": "string"
                },
                "userPasswordProhibitUsername": {
                  "default": "",
                  "description": "SQLSERVER_USER_PASSWORD_PROHIBIT_USERNAME: Prohibit username in password (true/false)",
                  "required": [],
                  "title": "userPasswordProhibitUsername",
                  "type": "string"
                },
                "userPasswordRequireDigit": {
                  "default": "",
                  "description": "SQLSERVER_USER_PASSWORD_REQUIRE_DIGIT: Require at least one digit (true/false)",
                  "required": [],
                  "title": "userPasswordRequireDigit",
                  "type": "string"
                },
                "userPasswordRequireMultipleCase": {
                  "default": "",
                  "description": "SQLSERVER_USER_PASSWORD_REQUIRE_MULTIPLE_CASE: Require both upper and lowercase (true/false)",
                  "required": [],
                  "title": "userPasswordRequireMultipleCase",
                  "type": "string"
                },
                "userPasswordRequireSymbol": {
                  "default": "",
                  "description": "SQLSERVER_USER_PASSWORD_REQUIRE_SYMBOL: Require at least one symbol (true/false)",
                  "required": [],
                  "title": "userPasswordRequireSymbol",
                  "type": "string"
                },
                "userRequired": {
                  "default": "",
                  "description": "External user and connection handling\nSQLSERVER_USER_REQUIRED: Require database user account for authentication (true/false)",
                  "required": [],
                  "title": "userRequired",
                  "type": "string"
                },
                "username": {
                  "default": "",
                  "description": "SQLSERVER_USERNAME: User that Guacamole will use to connect to SQL Server (required)",
                  "required": [],
                  "title": "username",
                  "type": "string"
                }
              },
              "required": [
                "enabled",
                "hostname",
                "port",
                "database",
                "username",
                "password",
                "driver",
                "instance",
                "batchSize",
                "userPasswordMinLength",
                "userPasswordRequireMultipleCase",
                "userPasswordRequireSymbol",
                "userPasswordRequireDigit",
                "userPasswordProhibitUsername",
                "userPasswordMinAge",
                "userPasswordMaxAge",
                "userPasswordHistorySize",
                "defaultMaxConnections",
                "defaultMaxGroupConnections",
                "defaultMaxConnectionsPerUser",
                "defaultMaxGroupConnectionsPerUser",
                "absoluteMaxConnections",
                "userRequired",
                "autoCreateAccounts",
                "trackExternalConnectionHistory",
                "enforceAccessWindowsForActiveSessions"
              ],
              "title": "sqlserver",
              "type": "object"
            },
            "totp": {
              "additionalProperties": false,
              "description": "TOTP (Time-based One-Time Password) authentication\nTwo-factor authentication using authenticator applications",
              "properties": {
                "digits": {
                  "default": "",
                  "description": "TOTP_DIGITS: Number of digits in generated codes - 6, 7, or 8 (default: 6)",
                  "required": [],
                  "title": "digits",
                  "type": "string"
                },
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "issuer": {
                  "default": "",
                  "description": "Optional TOTP configuration\nTOTP_ISSUER: Human-readable name of the issuing entity (default: \"Apache Guacamole\")",
                  "required": [],
                  "title": "issuer",
                  "type": "string"
                },
                "mode": {
                  "default": "",
                  "description": "TOTP_MODE: Hash algorithm - \"sha1\", \"sha256\", or \"sha512\" (default: \"sha1\")",
                  "required": [],
                  "title": "mode",
                  "type": "string"
                },
                "period": {
                  "default": "",
                  "description": "TOTP_PERIOD: Code validity duration in seconds (default: 30)",
                  "required": [],
                  "title": "period",
                  "type": "string"
                }
              },
              "required": [
                "enabled",
                "issuer",
                "digits",
                "period",
                "mode"
              ],
              "title": "totp",
              "type": "object"
            }
          },
          "required": [
            "postgresql",
            "mysql",
            "sqlserver",
            "ldap",
            "header",
            "saml",
            "totp",
            "openid",
            "duo",
            "cas",
            "json",
            "radius",
            "quickconnect"
          ],
          "title": "auth",
          "type": "object"
        },
        "authProviders": {
          "additionalProperties": false,
          "description": "Authentication provider configuration\nControls behavior when authentication providers fail",
          "properties": {
            "skipIfUnavailable": {
              "default": "",
              "description": "SKIP_IF_UNAVAILABLE: Comma-separated list of auth provider IDs to skip if they fail internally\nAllows other providers to continue functioning when specific systems are down\nExample: \"mysql, ldap\" - skip MySQL and LDAP if they're unavailable\nBy default, Guacamole aborts authentication if any provider fails",
              "required": [],
              "title": "skipIfUnavailable",
              "type": "string"
            }
          },
          "required": [
            "skipIfUnavailable"
          ],
          "title": "authProviders",
          "type": "object"
        },
        "autoscaling": {
          "additionalProperties": false,
          "description": "Horizontal Pod Autoscaler configuration for the client",
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "maxReplicas": {
              "default": 5,
              "required": [],
              "title": "maxReplicas",
              "type": "integer"
            },
            "minReplicas": {
              "default": 1,
              "required": [],
              "title": "minReplicas",
              "type": "integer"
            },
            "targetCPUUtilizationPercentage": {
              "default": 80,
              "required": [],
              "title": "targetCPUUtilizationPercentage",
              "type": "integer"
            }
          },
          "required": [
            "enabled",
            "minReplicas",
            "maxReplicas",
            "targetCPUUtilizationPercentage"
          ],
          "title": "autoscaling",
          "type": "object"
        },
        "caseSensitivity": {
          "additionalProperties": false,
          "description": "User and group name case sensitivity configuration\nControls how Guacamole handles case comparisons for identifiers",
          "properties": {
            "mode": {
              "default": "",
              "description": "CASE_SENSITIVITY: Controls case sensitivity for usernames and group names\nOptions: \"enabled\" (both case-sensitive), \"usernames\" (only usernames case-sensitive),\n         \"group-names\" (only group names case-sensitive), \"disabled\" (both case-insensitive)\nDefault: \"enabled\" - maintains backward compatibility with previous Guacamole versions\nNote: This controls Guacamole's handling, not the underlying authentication system behavior",
              "required": [],
              "title": "mode",
              "type": "string"
            }
          },
          "required": [
            "mode"
          ],
          "title": "caseSensitivity",
          "type": "object"
        },
        "extensionPriority": {
          "additionalProperties": false,
          "description": "Extension priority and load order\nControls the order in which authentication extensions are loaded and evaluated",
          "properties": {
            "order": {
              "default": "",
              "description": "EXTENSION_PRIORITY: Comma-separated list of extension namespaces in load order\nUse \"*\" to represent all unlisted extensions\nExample: \"saml, *, postgresql\" loads SAML first, then others, then PostgreSQL last",
              "required": [],
              "title": "order",
              "type": "string"
            }
          },
          "required": [
            "order"
          ],
          "title": "extensionPriority",
          "type": "object"
        },
        "extraEnv": {
          "description": "Additional environment variables for the client container\nUse this to set custom environment variables not covered by the auth sections above",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnv",
          "type": "array"
        },
        "guacamoleHome": {
          "additionalProperties": false,
          "description": "Custom extensions and GUACAMOLE_HOME configuration\nAllows use of custom or third-party extensions not supported by the Docker image",
          "properties": {
            "path": {
              "default": "",
              "description": "GUACAMOLE_HOME: Absolute path to custom GUACAMOLE_HOME directory within container\nUsed as a template for automatically-generated configuration",
              "required": [],
              "title": "path",
              "type": "string"
            }
          },
          "required": [
            "path"
          ],
          "title": "guacamoleHome",
          "type": "object"
        },
        "i18n": {
          "additionalProperties": false,
          "description": "Internationalization configuration\nControls available languages in the Guacamole interface",
          "properties": {
            "allowedLanguages": {
              "default": "",
              "description": "ALLOWED_LANGUAGES: Comma-separated whitelist of language keys (e.g., \"en, de, fr\")\nEnglish is the fallback language and should only be omitted if you're certain no strings are missing\nIf omitted, all defined languages will be available",
              "required": [],
              "title": "allowedLanguages",
              "type": "string"
            }
          },
          "required": [
            "allowedLanguages"
          ],
          "title": "i18n",
          "type": "object"
        },
        "image": {
          "additionalProperties": false,
          "description": "Container image configuration for the guacamole client\nUses the official guacamole/guacamole Docker image",
          "properties": {
            "pullPolicy": {
              "default": "IfNotPresent",
              "description": "Image pull policy - IfNotPresent, Always, or Never",
              "required": [],
              "title": "pullPolicy",
              "type": "string"
            },
            "repository": {
              "default": "guacamole/guacamole",
              "required": [],
              "title": "repository",
              "type": "string"
            },
            "tag": {
              "default": "",
              "description": "Overrides the image tag whose default is the chart appVersion",
              "required": [],
              "title": "tag",
              "type": "string"
            }
          },
          "required": [
            "repository",
            "pullPolicy",
            "tag"
          ],
          "title": "image",
          "type": "object"
        },
        "livenessProbe": {
          "additionalProperties": false,
          "description": "Health check probes for the client container\nHTTP probes check the /guacamole/api/languages endpoint (a real health check endpoint doesn't exist)",
          "properties": {
            "httpGet": {
              "additionalProperties": false,
              "properties": {
                "path": {
                  "default": "/guacamole/api/languages",
                  "required": [],
                  "title": "path",
                  "type": "string"
                },
                "port": {
                  "default": "http",
                  "required": [],
                  "title": "port",
                  "type": "string"
                }
              },
              "required": [
                "path",
                "port"
              ],
              "title": "httpGet",
              "type": "object"
            },
            "initialDelaySeconds": {
              "default": 60,
              "required": [],
              "title": "initialDelaySeconds",
              "type": "integer"
            },
            "periodSeconds": {
              "default": 30,
              "required": [],
              "title": "periodSeconds",
              "type": "integer"
            }
          },
          "required": [
            "httpGet",
            "initialDelaySeconds",
            "periodSeconds"
          ],
          "title": "livenessProbe",
          "type": "object"
        },
        "logging": {
          "additionalProperties": false,
          "description": "Logging configuration\nControls the verbosity level of Guacamole web application logs",
          "properties": {
            "level": {
              "default": "",
              "description": "LOG_LEVEL: Most verbose level of log messages to display in web application logs\nOptions: \"error\", \"warn\", \"info\", \"debug\", \"trace\" (in order of increasing verbosity)\nDefault: \"info\" - provides reasonable detail without excessive verbosity\nCan also be configured via logback.xml file for greater flexibility",
              "required": [],
              "title": "level",
              "type": "string"
            }
          },
          "required": [
            "level"
          ],
          "title": "logging",
          "type": "object"
        },
        "nodeSelector": {
          "additionalProperties": false,
          "description": "Node selector for client pod assignment\nMore information: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/",
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "proxy": {
          "additionalProperties": false,
          "description": "Proxy configuration for running Guacamole behind a reverse proxy\nConfigures Tomcat's RemoteIpValve to correctly determine user IP addresses",
          "properties": {
            "allowedIpsRegex": {
              "default": "",
              "description": "Optional proxy configuration (default values are correct for most deployments)\nPROXY_ALLOWED_IPS_REGEX: Regex matching trusted proxy IP addresses (Java Pattern format)",
              "required": [],
              "title": "allowedIpsRegex",
              "type": "string"
            },
            "byHeader": {
              "default": "",
              "description": "PROXY_BY_HEADER: HTTP header containing list of proxies (default: \"X-Forwarded-By\")",
              "required": [],
              "title": "byHeader",
              "type": "string"
            },
            "enabled": {
              "default": false,
              "description": "REMOTE_IP_VALVE_ENABLED: Enable Tomcat's RemoteIpValve (required to enable proxy support)",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "ipHeader": {
              "default": "",
              "description": "PROXY_IP_HEADER: HTTP header containing user's IP address (default: \"X-Forwarded-For\")",
              "required": [],
              "title": "ipHeader",
              "type": "string"
            },
            "protocolHeader": {
              "default": "",
              "description": "PROXY_PROTOCOL_HEADER: HTTP header containing protocol used (default: \"X-Forwarded-Proto\")",
              "required": [],
              "title": "protocolHeader",
              "type": "string"
            }
          },
          "required": [
            "enabled",
            "allowedIpsRegex",
            "byHeader",
            "ipHeader",
            "protocolHeader"
          ],
          "title": "proxy",
          "type": "object"
        },
        "readinessProbe": {
          "additionalProperties": false,
          "properties": {
            "httpGet": {
              "additionalProperties": false,
              "properties": {
                "path": {
                  "default": "/guacamole/api/languages",
                  "required": [],
                  "title": "path",
                  "type": "string"
                },
                "port": {
                  "default": "http",
                  "required": [],
                  "title": "port",
                  "type": "string"
                }
              },
              "required": [
                "path",
                "port"
              ],
              "title": "httpGet",
              "type": "object"
            },
            "initialDelaySeconds": {
              "default": 30,
              "required": [],
              "title": "initialDelaySeconds",
              "type": "integer"
            },
            "periodSeconds": {
              "default": 10,
              "required": [],
              "title": "periodSeconds",
              "type": "integer"
            }
          },
          "required": [
            "httpGet",
            "initialDelaySeconds",
            "periodSeconds"
          ],
          "title": "readinessProbe",
          "type": "object"
        },
        "recording": {
          "additionalProperties": false,
          "description": "History Recording Storage Extension\nEnables viewing historical session recordings from within the Guacamole web interface",
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "searchPath": {
              "default": "",
              "description": "RECORDING_SEARCH_PATH: Absolute path to folder containing session recordings\nRequires shared volume between guacd (write, UID 1000) and client (read, UID 1001) containers",
              "required": [],
              "title": "searchPath",
              "type": "string"
            }
          },
          "required": [
            "enabled",
            "searchPath"
          ],
          "title": "recording",
          "type": "object"
        },
        "replicaCount": {
          "default": 1,
          "description": "Number of replicas for the client deployment\nThis will set the replicaset count for the client",
          "required": [],
          "title": "replicaCount",
          "type": "integer"
        },
        "resources": {
          "additionalProperties": false,
          "description": "Resource limits and requests for the client container",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "service": {
          "additionalProperties": false,
          "description": "Service configuration for the Guacamole client\nExposes the web application on port 8080",
          "properties": {
            "port": {
              "default": 8080,
              "description": "Port where Guacamole web interface is accessible (default: 8080)",
              "required": [],
              "title": "port",
              "type": "integer"
            },
            "type": {
              "default": "ClusterIP",
              "description": "Service type - ClusterIP, NodePort, LoadBalancer, or ExternalName",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [
            "type",
            "port"
          ],
          "title": "service",
          "type": "object"
        },
        "tolerations": {
          "description": "Tolerations for client pod assignment\nMore information: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/",
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        }
      },
      "required": [
        "replicaCount",
        "image",
        "service",
        "resources",
        "livenessProbe",
        "readinessProbe",
        "autoscaling",
        "auth",
        "extraEnv",
        "api",
        "i18n",
        "caseSensitivity",
        "logging",
        "authProviders",
        "proxy",
        "guacamoleHome",
        "extensionPriority",
        "recording",
        "nodeSelector",
        "tolerations",
        "affinity"
      ],
      "title": "client",
      "type": "object"
    },
    "fullnameOverride": {
      "default": "",
      "required": [],
      "title": "fullnameOverride",
      "type": "string"
    },
    "global": {
      "description": "Global values are values that can be accessed from any chart or subchart by exactly the same name.",
      "required": [],
      "title": "global",
      "type": "object"
    },
    "guacd": {
      "additionalProperties": false,
      "description": "Guacd Daemon configuration\nThe guacd daemon built from guacamole-server source with support for VNC, RDP, SSH, telnet, and Kubernetes\nHandles the actual remote desktop protocol connections on behalf of the Guacamole web application",
      "properties": {
        "affinity": {
          "additionalProperties": false,
          "description": "Affinity rules for guacd pod assignment\nMore information: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/",
          "required": [],
          "title": "affinity",
          "type": "object"
        },
        "autoscaling": {
          "additionalProperties": false,
          "description": "Horizontal Pod Autoscaler configuration for guacd\nNote: Lower max replicas than client as guacd is typically less resource intensive",
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "maxReplicas": {
              "default": 3,
              "required": [],
              "title": "maxReplicas",
              "type": "integer"
            },
            "minReplicas": {
              "default": 1,
              "required": [],
              "title": "minReplicas",
              "type": "integer"
            },
            "targetCPUUtilizationPercentage": {
              "default": 80,
              "required": [],
              "title": "targetCPUUtilizationPercentage",
              "type": "integer"
            }
          },
          "required": [
            "enabled",
            "minReplicas",
            "maxReplicas",
            "targetCPUUtilizationPercentage"
          ],
          "title": "autoscaling",
          "type": "object"
        },
        "extraEnv": {
          "description": "Additional environment variables for guacd\nUseful for custom configuration or third-party extensions\nExample:\nextraEnv:\n  - name: CUSTOM_GUACD_VAR\n    value: \"custom-value\"\n  - name: ANOTHER_VAR\n    value: \"another-value\"",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnv",
          "type": "array"
        },
        "image": {
          "additionalProperties": false,
          "description": "Container image configuration for guacd\nUses the official guacamole/guacd Docker image",
          "properties": {
            "pullPolicy": {
              "default": "IfNotPresent",
              "description": "Image pull policy - IfNotPresent, Always, or Never",
              "required": [],
              "title": "pullPolicy",
              "type": "string"
            },
            "repository": {
              "default": "guacamole/guacd",
              "required": [],
              "title": "repository",
              "type": "string"
            },
            "tag": {
              "default": "",
              "description": "Overrides the image tag whose default is the chart appVersion",
              "required": [],
              "title": "tag",
              "type": "string"
            }
          },
          "required": [
            "repository",
            "pullPolicy",
            "tag"
          ],
          "title": "image",
          "type": "object"
        },
        "livenessProbe": {
          "additionalProperties": false,
          "description": "Health check probes for the guacd container\nTCP socket probes check connectivity to the guacd port",
          "properties": {
            "initialDelaySeconds": {
              "default": 30,
              "required": [],
              "title": "initialDelaySeconds",
              "type": "integer"
            },
            "periodSeconds": {
              "default": 30,
              "required": [],
              "title": "periodSeconds",
              "type": "integer"
            },
            "tcpSocket": {
              "additionalProperties": false,
              "properties": {
                "port": {
                  "default": 4822,
                  "required": [],
                  "title": "port",
                  "type": "integer"
                }
              },
              "required": [
                "port"
              ],
              "title": "tcpSocket",
              "type": "object"
            }
          },
          "required": [
            "tcpSocket",
            "initialDelaySeconds",
            "periodSeconds"
          ],
          "title": "livenessProbe",
          "type": "object"
        },
        "logLevel": {
          "default": "",
          "description": "Log level configuration for guacd\nControls the verbosity of guacd logging output\nAvailable levels: error, warn, info, debug, trace\nLeave empty to use guacd default\nMore information: https://guacamole.apache.org/doc/gug/configuring-guacamole.html#guacd-logging",
          "required": [],
          "title": "logLevel",
          "type": "string"
        },
        "nodeSelector": {
          "additionalProperties": false,
          "description": "Node selector for guacd pod assignment\nMore information: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/",
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "readinessProbe": {
          "additionalProperties": false,
          "properties": {
            "initialDelaySeconds": {
              "default": 10,
              "required": [],
              "title": "initialDelaySeconds",
              "type": "integer"
            },
            "periodSeconds": {
              "default": 10,
              "required": [],
              "title": "periodSeconds",
              "type": "integer"
            },
            "tcpSocket": {
              "additionalProperties": false,
              "properties": {
                "port": {
                  "default": 4822,
                  "required": [],
                  "title": "port",
                  "type": "integer"
                }
              },
              "required": [
                "port"
              ],
              "title": "tcpSocket",
              "type": "object"
            }
          },
          "required": [
            "tcpSocket",
            "initialDelaySeconds",
            "periodSeconds"
          ],
          "title": "readinessProbe",
          "type": "object"
        },
        "replicaCount": {
          "default": 1,
          "description": "Number of replicas for the guacd deployment\nThis will set the replicaset count for guacd",
          "required": [],
          "title": "replicaCount",
          "type": "integer"
        },
        "resources": {
          "additionalProperties": false,
          "description": "Resource limits and requests for the guacd container",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "service": {
          "additionalProperties": false,
          "description": "Service configuration for guacd\nExposes the guacd daemon on port 4822 for client connections",
          "properties": {
            "port": {
              "default": 4822,
              "description": "Port where guacd listens for connections (standard guacd port: 4822)",
              "required": [],
              "title": "port",
              "type": "integer"
            },
            "type": {
              "default": "ClusterIP",
              "description": "Service type - ClusterIP, NodePort, LoadBalancer, or ExternalName\nNote: ClusterIP is recommended as guacd should only be accessible by the client",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [
            "type",
            "port"
          ],
          "title": "service",
          "type": "object"
        },
        "tolerations": {
          "description": "Tolerations for guacd pod assignment\nMore information: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/",
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        }
      },
      "required": [
        "replicaCount",
        "image",
        "service",
        "resources",
        "livenessProbe",
        "readinessProbe",
        "autoscaling",
        "logLevel",
        "extraEnv",
        "nodeSelector",
        "tolerations",
        "affinity"
      ],
      "title": "guacd",
      "type": "object"
    },
    "imagePullSecrets": {
      "description": "Image pull secrets for private container registries\nMore information: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/",
      "items": {
        "required": []
      },
      "required": [],
      "title": "imagePullSecrets",
      "type": "array"
    },
    "ingress": {
      "additionalProperties": false,
      "description": "Ingress configuration for the Guacamole web interface\nOnly applies to the client service - guacd should not be exposed externally\nMore information: https://kubernetes.io/docs/concepts/services-networking/ingress/",
      "properties": {
        "annotations": {
          "additionalProperties": false,
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "className": {
          "default": "",
          "required": [],
          "title": "className",
          "type": "string"
        },
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "hosts": {
          "description": "kubernetes.io/ingress.class: nginx\nkubernetes.io/tls-acme: \"true\"",
          "items": {
            "anyOf": [
              {
                "additionalProperties": false,
                "properties": {
                  "host": {
                    "default": "chart-example.local",
                    "required": [],
                    "title": "host",
                    "type": "string"
                  },
                  "paths": {
                    "items": {
                      "anyOf": [
                        {
                          "additionalProperties": false,
                          "properties": {
                            "path": {
                              "default": "/",
                              "required": [],
                              "title": "path",
                              "type": "string"
                            },
                            "pathType": {
                              "default": "ImplementationSpecific",
                              "required": [],
                              "title": "pathType",
                              "type": "string"
                            }
                          },
                          "required": [
                            "path",
                            "pathType"
                          ],
                          "type": "object"
                        }
                      ],
                      "required": []
                    },
                    "required": [],
                    "title": "paths",
                    "type": "array"
                  }
                },
                "required": [
                  "host",
                  "paths"
                ],
                "type": "object"
              }
            ],
            "required": []
          },
          "required": [],
          "title": "hosts",
          "type": "array"
        },
        "tls": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "tls",
          "type": "array"
        }
      },
      "required": [
        "enabled",
        "className",
        "annotations",
        "hosts",
        "tls"
      ],
      "title": "ingress",
      "type": "object"
    },
    "nameOverride": {
      "default": "",
      "description": "Override the chart name used in resource naming",
      "required": [],
      "title": "nameOverride",
      "type": "string"
    },
    "podAnnotations": {
      "additionalProperties": false,
      "description": "Pod annotations for both client and guacd pods\nMore information: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/",
      "required": [],
      "title": "podAnnotations",
      "type": "object"
    },
    "podLabels": {
      "additionalProperties": false,
      "description": "Pod labels for both client and guacd pods\nMore information: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/",
      "required": [],
      "title": "podLabels",
      "type": "object"
    },
    "podSecurityContext": {
      "additionalProperties": false,
      "description": "Security context for both client and guacd pods\nMore information: https://kubernetes.io/docs/concepts/security/security-context/",
      "required": [],
      "title": "podSecurityContext",
      "type": "object"
    },
    "securityContext": {
      "additionalProperties": false,
      "description": "Security context for containers within both client and guacd pods",
      "required": [],
      "title": "securityContext",
      "type": "object"
    },
    "serviceAccount": {
      "additionalProperties": false,
      "description": "Service account configuration\nMore information: https://kubernetes.io/docs/concepts/security/service-accounts/",
      "properties": {
        "annotations": {
          "additionalProperties": false,
          "description": "Annotations to add to the service account",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "automount": {
          "default": true,
          "description": "Automatically mount a ServiceAccount's API credentials?",
          "required": [],
          "title": "automount",
          "type": "boolean"
        },
        "create": {
          "default": true,
          "description": "Specifies whether a service account should be created",
          "required": [],
          "title": "create",
          "type": "boolean"
        },
        "name": {
          "default": "",
          "description": "The name of the service account to use.\nIf not set and create is true, a name is generated using the fullname template",
          "required": [],
          "title": "name",
          "type": "string"
        }
      },
      "required": [
        "create",
        "automount",
        "annotations",
        "name"
      ],
      "title": "serviceAccount",
      "type": "object"
    },
    "volumeMounts": {
      "description": "Additional volume mounts for both client and guacd containers",
      "items": {
        "required": []
      },
      "required": [],
      "title": "volumeMounts",
      "type": "array"
    },
    "volumes": {
      "description": "Additional volumes to mount in both client and guacd deployments\nUseful for shared storage like recording directories or custom configurations",
      "items": {
        "required": []
      },
      "required": [],
      "title": "volumes",
      "type": "array"
    }
  },
  "required": [
    "client",
    "guacd",
    "imagePullSecrets",
    "nameOverride",
    "fullnameOverride",
    "serviceAccount",
    "podAnnotations",
    "podLabels",
    "podSecurityContext",
    "securityContext",
    "ingress",
    "volumes",
    "volumeMounts"
  ],
  "type": "object"
}